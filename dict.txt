{
    "What is the difference between a list and a tuple in Python? When would you use each?": "A list is mutable, while a tuple is immutable. Lists are used for dynamic data, and tuples are used for fixed data. Lists are better when changes are required, while tuples are more efficient for read-only purposes.",
    "Explain the difference between == and = is in Python.": "= is an assignment operator, while == checks for equality between two values. = assigns a value to a variable, while == compares two values for equality.",
    "Explain the concept of inheritance in object-oriented programming.": "Inheritance allows a class to inherit properties and methods from another class. It promotes code reuse and helps create relationships between classes, such as parent-child relationships.",
    "What is a decorator in Python? How do you use it?": "A decorator is a function that modifies another function’s behavior. It is used with the @decorator syntax and is useful for logging, access control, and modifying functions without changing their code.",
    "How does garbage collection work in Python?": "Python uses automatic memory management via garbage collection. It removes unused objects from memory using reference counting and cyclic garbage collection to free up space.",
    "How do you handle exceptions in Python? Provide examples of using try, except, finally.": "Exceptions are handled using try, except, and finally blocks. Try contains the code that might raise an error, except handles the error, and finally executes code that runs regardless of whether an exception occurred.",
    "Explain the difference between GET and POST HTTP methods.": "GET retrieves data from the server and appends parameters to the URL, while POST sends data in the request body. GET is used for fetching, POST for submitting data.",
    "What is the difference between a stack and a queue? Provide examples of where each might be used.": "A stack follows LIFO, and a queue follows FIFO. Stacks are used for function calls, while queues are used in task scheduling. Both are essential data structures.",
    "Explain the concept of recursion. Provide an example of a recursive function in Python.": "Recursion is a function that calls itself. It typically has a base case to stop infinite recursion. For example, calculating the factorial of a number is a common recursive task.",
    "Tell me about a challenging problem you encountered during a project and how you solved it.": "I faced a slow algorithm issue in a project and optimized it by switching from a list to a hash table, reducing the time complexity and improving performance.",
    "How do you stay updated with the latest trends and technologies in your field?": "I stay updated through online courses, webinars, blogs, and networking with professionals. I also experiment with new technologies and actively participate in coding communities.",
    "Describe a situation where you had to work under pressure to meet a deadline. How did you handle it?": "I managed pressure by prioritizing tasks, delegating responsibilities, and maintaining open communication with the team to ensure timely project completion.",
    "Can you describe a time when you had to work on a team project? What was your role, and how did you contribute?": "In a team project, I contributed as a backend developer, collaborating with frontend developers, managing API integration, and ensuring smooth project execution.",
    "How do you approach solving a complex problem? Can you walk me through your problem-solving process?": "I break down the problem into smaller parts, analyze each component, brainstorm solutions, test approaches, and refine them based on results. I also document the process for future reference.",
    "Describe a situation where you had a disagreement with a team member. How did you handle it?": "In a disagreement over design, I listened to the other person’s views, presented my ideas, and we collaborated to find a middle ground that combined the best aspects of both approaches.",
    "Can you provide an example of a time when you demonstrated leadership skills?": "I led a hackathon team by assigning tasks, motivating the group, and ensuring communication. Our project won second prize, demonstrating effective leadership and teamwork.",
    "How do you prioritize tasks when working on multiple projects simultaneously?": "I prioritize tasks based on deadlines and impact, using project management tools to keep track of progress. Regular reassessment helps me adjust priorities when needed."
}
